
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";
}
<h1>Xperience Learning Kit</h1>
<p>
    This is an ASP.NET MVC 5 site that provides basic examples suitable for learning purposes. The project's code is displayed within the examples in the Xperience documentation.
</p>
<p>
    For an example of a real-world website, see the MVC Dancing Goat sample site.
</p>
<h2>Users and roles</h2>
<ul>
    <li>
        @Html.ActionLink("Sign in", "SignIn", "Account")
        @if (User.Identity.IsAuthenticated)
        {
            <ul>
                <li>Current user: <strong>@User.Identity.Name</strong></li>
                <li>@Html.ActionLink("Change your user details", "EditUser", "Account")</li>
                <li>@Html.ActionLink("Manage your roles", "ManageRoles", "Roles")</li>
                <li>@Html.ActionLink("Restricted page", "RestrictedPage", "Roles") (only available for users with the 'KenticoRole' role)</li>
                <li>
                    @using (Html.BeginForm("SignOut", "Account"))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Sign out" />
                    }
                </li>
            </ul>
        }
    </li>
    <li>@Html.ActionLink("Register", "Register", "Register")</li>
    <li>@Html.ActionLink("Register with email confirmation", "RegisterWithEmailConfirmation", "EmailRegister")</li>
    <li>
        @Html.ActionLink("Register with consent", "Register", "RegisterWithConsent") <br />
        <strong>Note</strong>: An error will occur on the 'Register with consent' page if a consent with code name "SampleRegistrationConsent" does not exist in the connected Xperience database.
    </li>
</ul>

<h2>Widgets</h2>
<ul>
    <li>
        <a href="@Url.Content("~/PageBuilder")">Sample page builder</a><br />
        <strong>Note</strong>: To be able to use the page builder in the Pages application, you need to do the following in your connected Xperience instance:
        <ol>
            <li>
                In the <em>Settings</em> application, configure your site's <em>URLs and SEO -> Routing mode</em> setting to <em>Based on content tree</em>. In the same category, enable <em>Hide language prefix in default culture URLs</em>.
            </li>
            <li>
                In the <em>Page types</em> application, create a new page type.
                <ul>
                    <li>
                        Set the page type's code name to: <strong>LearningKit.PageBuilderAdvanced</strong> (Namespace: LearningKit, Name: PageBuilderAdvanced).
                    </li>
                    <li>
                        Enable the <em>Page builder</em> and <em>URL</em> features for the page type.
                    </li>                    
                </ul>                
            </li>
            <li>
                In the <em>Pages</em> application, create a page using the page type from the previous step.
                <ul>
                    <li>
                        The default link above opens a page placed directly under the website root, with the following <em>URL slug</em>: <em>PageBuilder</em> (set on the page's <em>General -> URLs</em> tab)
                    </li>
                </ul>
            </li>            
        </ol>
    </li>
</ul>

<h2>Page templates</h2>
<ul>
    <li>
        <a href="@Url.Content("~/Campaign")">Template-based page</a><br />
        <strong>Note</strong>: To create pages based on a template in the Pages application, you need to do the following in your connected Xperience instance:
        <ol>
            <li>
                In the <em>Settings</em> application, configure your site's <em>URLs and SEO -> Routing mode</em> setting to <em>Based on content tree</em>. In the same category, enable <em>Hide language prefix in default culture URLs</em>.
            </li>
            <li>
                In the <em>Page types</em> application, create a new page type.
                <ul>
                    <li>
                        Set the page type's code name to: <strong>LearningKit.LandingPage</strong> (Namespace: LearningKit, Name: LandingPage).
                    </li>
                    <li>
                        Enable the <em>Page builder</em> and <em>URL</em> features for the page type.
                    </li>
                </ul>
            </li>            
            <li>
                In the <em>Pages</em> application, create any number of landing pages using the page type from the previous step.
                <ul>
                    <li>
                        The default link above opens a page placed directly under the website root, with the following <em>URL slug</em>: <em>Campaign</em> (set on the page's <em>General -> URLs</em> tab)
                    </li>
                </ul>
            </li>
        </ol>
    </li>
</ul>

<h2>Forms</h2>
<ol>
    <li>Compose a form in the <strong>Forms</strong> application of the connected Xperience instance.</li>
    <li>Add the form onto a page using the page builder functionality and the <strong>Form</strong> widget. You can use the 'Sample page builder' page described in the Widgets section above.</li>
</ol>

<h2>Media library</h2>
<ul>
    <li>
        @Html.ActionLink("Media library files listing", "ShowMediaFiles", "MediaLibrary") <br />
        <strong>Note</strong>: The media library files listing displays files from the "SampleMediaLibrary". An error will occur if the media library does not exist in the connected Xperience database.
    </li>
</ul>

<h2>E-commerce</h2>
<ul>
    <li>
        @Html.ActionLink("Product listing with links to product details", "Listing", "ProductListing")<br />
        <strong>Note</strong>: The product listing displays products from the "LearningKit.LearningProductType" <strong>product</strong> page type with the <em>URL</em> feature enabled. The example uses content tree-based routing. <br/>
        An error will occur if the page type does not exist in the connected Xperience database.<br />
        The page type's required properties:
        <ul>
            <li>Display name: LearningProductType</li>
            <li>Namespace: LearningKit</li>
            <li>Name: LearningProductType</li>
        </ul>
        Two standard fields:
        <ol>
            <li> Field name: LPTCountry; Data type: Text</li>
            <li> Field name: LPTWithFeature; Data type: Boolean (Yes/No)</li>
        </ol>
    </li>
    <li>
        @Html.ActionLink("Product listing with a product filter", "FilterForeignProperty", "ProductFilter")<br />
        <strong>Note:</strong> The product listing has the same prerequisites as the product listing above. Additionally, products should have assigned manufacturers.
    </li>
    <li>
        Checkout process
        <ul>
            <li>Step 1: @Html.ActionLink("Display shopping cart with coupon redemption", "ShoppingCart", "Checkout")</li>
            <li>Step 2: @Html.ActionLink("Customer details checkout process step", "DeliveryDetails", "Checkout")</li>
            <li>Step 3: @Html.ActionLink("Preview checkout process step", "PreviewAndPay", "Checkout")</li>
            <li>
                Helper actions:
                <ul>
                    <li>@Html.ActionLink("Create sample SKUs", "CreateSampleSKUs", "ECUtilities")</li>
                    <li>@Html.ActionLink("Delete sample SKUs", "DeleteSampleSKUs", "ECUtilities")</li>
                    <li>@Html.ActionLink("Fill cart", "FillShoppingCart", "ECUtilities")</li>
                    <li>@Html.ActionLink("Remove all items from the shopping cart", "RemoveAllItemsFromShoppingCart", "ECUtilities")</li>
                </ul>
            </li>
        </ul>
    </li>
    <li>@Html.ActionLink("Display and edit order details", "OrderDetail", "Order")</li>
    <li>@Html.ActionLink("Order listing with reorder option", "MyOrders", "Order") (Signed in users only)</li>
</ul>
<h2>Data protection</h2>
<ul>
    <li>
        @Html.ActionLink("Tracking consent", "DisplayConsent", "TrackingConsent")<br />
        <strong>Note</strong>: An error will occur if a consent with code name "SampleTrackingConsent" does not exist in the connected Xperience database.
    </li>
    <li>
        @Html.ActionLink("Privacy page", "Index", "PrivacyPage")
    </li>
</ul>
<h2>On-line marketing</h2>
<ul>
    <li>@Html.ActionLink("Personalized content", "PersonalizedGreeting", "Personalization")</li>
</ul>
<h2>Email marketing</h2>
<ul>
    <li>@Html.ActionLink("Subscribe to a newsletter", "Subscribe", "NewsletterSubscription")</li>
</ul>
<h2>Search</h2>
<ul>
    <li>@Html.ActionLink("Smart search", "SearchIndex", "Search")</li>
    <li>
        @Html.ActionLink("Azure search", "Index", "AzureSearch") <br />
        <strong>Note</strong>: An error will ocurr if the connected Xperience database does not contain an Azure search index with the 'dg-store' code name. Refer to the <a href="https://devnet.kentico.com/CMSPages/DocLinkMapper.ashx">Xperience documentation</a> for a full walkthrough implementing this scenario.
    </li>
</ul>
